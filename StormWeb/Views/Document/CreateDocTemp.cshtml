@model StormWeb.Models.Template_Document

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Template_Document</legend>

@*        <div class="editor-label">
            @Html.LabelFor(model => model.Course_Id, "Course")
        </div>
        <div class="display-field">
            @Html.DropDownList("Course_Id", String.Empty)
            @Html.ValidationMessageFor(model => model.Course_Id)
        </div>
*@        <div class="editor-label">
            @Html.LabelFor(model => model.Form_Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Form_Name)
            @Html.ValidationMessageFor(model => model.Form_Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Comment)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Comment)
            @Html.ValidationMessageFor(model => model.Comment)
        </div>
         <input id="file" type="file" name="file" />
        <a href="@Url.Action("CreateDocTemp")" title="Upload"><i class='color-icons drive_cd_empty_co tip-top' data-original-title="Upload"></i></a>

@*        <a class='iframe' href="@Url.Action("CreateDocTemp")" title="Upload"><i class='color-icons drive_cd_empty_co tip-top' data-original-title="Upload"></i></a>
*@    

@*        <div class="editor-label">
            @Html.LabelFor(model => model.Path)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Path)
            @Html.ValidationMessageFor(model => model.Path)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UploadedBy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UploadedBy)
            @Html.ValidationMessageFor(model => model.UploadedBy)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UploadedOn)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UploadedOn)
            @Html.ValidationMessageFor(model => model.UploadedOn)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FileName)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FileName)
            @Html.ValidationMessageFor(model => model.FileName)
        </div>
*@  

        <p>
            <input type="submit" value="Create" />
        </p>
   
  </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "CreateCourseSelection")
</div>
