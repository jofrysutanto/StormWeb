@model StormWeb.Models.Client
@{
    ViewBag.Title = "Edit";
}
<script type="text/javascript">

    // $(function () {
    $(document).ready(function () {
        $(".dp1").datepicker({
            dateFormat: 'dd/mm/yy',
            yearRange: '-100:c',
            changeMonth: true,
            changeYear: true,
            showOn: "button",
            buttonImage: "../../Content/img/calendar_btn.png",
            buttonImageOnly: true
        });
    });
</script>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.HiddenFor(model => model.Client_Id)
    <div class="form-horizontal well">
        <fieldset style="margin-left:50px;">
            <legend>
                <h2>
                    Edit Client Details</h2>
            </legend> 
                <div class="control-group">
                    @Html.Label("Title", null, new { @class = "control-label form-required" })
                    <div class="controls">
                        @Html.EditorFor(model => model.Title, new { @class = "input-xlarge text-tip", placeholder = "Title" })
                        <p class="help-block">
                            @Html.ValidationMessageFor(model => model.Title)
                        </p>
                    </div>
                </div>
                <div class="control-group">
                    @Html.Label("DOB", null, new { @class = "control-label form-required" })
                    <div class="controls">
                        <div class="input-append">
                            @Html.TextBoxFor(model => model.Dob, new { @class = "dp1", @readonly = "readonly" })
                        </div>
                        <p class="help-block">
                            @Html.ValidationMessageFor(model => model.Dob)
                        </p>
                    </div>
                </div>
             <div class="control-group">
                    @Html.Label("GivenName", null, new { @class = "control-label form-required" })
                    <div class="controls">
                        @Html.EditorFor(model => model.GivenName, new { @class = "input-xlarge text-tip", placeholder = "GivenName" })
                        <p class="help-block">
                            @Html.ValidationMessageFor(model => model.GivenName)
                        </p>
                    </div>
                </div>
                 <div class="control-group">
                    @Html.Label("LastName", null, new { @class = "control-label form-required" })
                    <div class="controls">
                        @Html.EditorFor(model => model.LastName, new { @class = "input-xlarge text-tip", placeholder = "LastName" })
                        <p class="help-block">
                            @Html.ValidationMessageFor(model => model.LastName)
                        </p>
                    </div>
                </div>
                 <div class="control-group">
                    @Html.Label("Email", null, new { @class = "control-label form-required" })
                    <div class="controls" >
                        @Html.EditorFor(model => model.Email, new { @class = "input-xlarge text-tip", placeholder = "Email" })
                        <p class="help-block">
                            @Html.ValidationMessageFor(model => model.Email)
                        </p>
                    </div>
                </div>
                <div class="control-group">
                    @Html.Label("ContactNumber", null, new { @class = "control-label form-required" })
                    <div class="controls">
                        @Html.EditorFor(model => model.ContactNumber, new { @class = "input-xlarge text-tip", placeholder = "ContactNumber" })
                        <p class="help-block">
                            @Html.ValidationMessageFor(model => model.ContactNumber)
                        </p>
                    </div>
                </div>
                 <div class="control-group">
                    @Html.Label("Secondary Contact Number", null, new { @class = "control-label form-required", style = "width:200px;margin-left: -50px;" })
                    <div class="controls">
                        @Html.EditorFor(model => model.SecondaryContactNumber, new { @class = "input-xlarge text-tip", placeholder = "Secondary Contact Number" })
                        <p class="help-block">
                            @Html.ValidationMessageFor(model => model.SecondaryContactNumber)
                        </p>
                    </div>
                </div>
                  <div class="control-group">
                    @Html.Label("Address", null, new { @class = "control-label form-required" })
                    <div class="controls">
                      @Html.DropDownListFor(model => model.Address.Address_Id, (IEnumerable<SelectListItem>)ViewBag.Address_Id,"--Select--", new { @class = "chzn-select" })
                        <p class="help-block">
                            @Html.ValidationMessageFor(model => model.Address_Id)
                        </p>
                    </div>
                </div>
                <div class="control-group">
                    @Html.Label("Services", null, new { @class = "control-label form-required" })
                    <div class="controls">
                      @Html.EditorFor(model => model.Services, new { @class = "input-xlarge text-tip", placeholder = "Services" })
                         <p class="help-block">
                            @Html.ValidationMessageFor(model => model.Services)
                        </p>
                    </div>
                </div>
                <div class="control-group">
                    @Html.Label("Preferred Country", null, new { @class = "control-label form-required" })
                    <div class="controls">
                      @Html.EditorFor(model => model.PreferredCountry, new { @class = "input-xlarge text-tip", placeholder = "Preferred Country" })
                         <p class="help-block">
                            @Html.ValidationMessageFor(model => model.PreferredCountry)
                        </p>
                    </div>
                </div>
                <div class="control-group">
                    @Html.Label("InPreferred Country", null, new { @class = "control-label form-required" })
                    <div class="controls"> 
                      @Html.EditorFor(model => model.InPreferredCountry, new { @class = "input-xlarge text-tip", placeholder = "InPreferred Country" })
                         <p class="help-block">
                            @Html.ValidationMessageFor(model => model.InPreferredCountry)
                        </p>
                    </div>
                </div>
                 <div class="control-group">
                    @Html.Label("Preferred Country Visa Status", null, new { @class = "control-label form-required" , style = "width:200px;margin-left: -50px;" })
                    <div class="controls"> 
                      @Html.EditorFor(model => model.PreferredCountryVisaStatus, new { @class = "input-xlarge text-tip", placeholder = "Preferred Country Visa Status" })
                         <p class="help-block">
                            @Html.ValidationMessageFor(model => model.PreferredCountryVisaStatus)
                        </p>
                    </div>
                </div>
                 <div class="control-group">
                    @Html.Label("Marital Status", null, new { @class = "control-label form-required" })
                    <div class="controls"> 
                      @Html.EditorFor(model => model.MaritalStatus, new { @class = "input-xlarge text-tip", placeholder = "Marital Status" })
                         <p class="help-block">
                            @Html.ValidationMessageFor(model => model.MaritalStatus)
                        </p>
                    </div>
                </div>
                <div class="control-group">
                    @Html.Label("RelatedKin Detail", null, new { @class = "control-label form-required" })
                    <div class="controls"> 
                      @Html.EditorFor(model => model.RelatedKinDetail, new { @class = "input-xlarge text-tip", placeholder = "RelatedKin Detail" })
                         <p class="help-block">
                            @Html.ValidationMessageFor(model => model.RelatedKinDetail)
                        </p>
                    </div>
                </div>
                <div class="control-group">
                    @Html.Label("Nationality", null, new { @class = "control-label form-required" })
                    <div class="controls"> 
                      @Html.EditorFor(model => model.Nationality, new { @class = "input-xlarge text-tip", placeholder = "Nationality" })
                         <p class="help-block">
                            @Html.ValidationMessageFor(model => model.Nationality)
                        </p>
                    </div>
                </div> 
                 <div class="control-group">
                    @Html.Label("Registered On", null, new { @class = "control-label form-required" })
                    <div class="controls">
                        <div class="input-append">
                            @Html.TextBoxFor(model => model.Registered_On, new { @class = "dp1", @readonly = "readonly" })
                        </div>
                        <p class="help-block">
                            @Html.ValidationMessageFor(model => model.Dob)
                        </p>
                    </div>
                </div>
                   <div class="control-group">
                     <div class="controls">
                 <input type="submit" value="Save Changes" class="btn btn-primary" />
                        @Html.Button_DeleteOrCancel("Cancel", "../Index")
           </div></div>
            @*<table style="text-align: left;">
                <tr>
                    <th>
                        @Html.LabelFor(model => model.Title)
                    </th>
                    <td>@Html.EditorFor(model => model.Title)
                        @Html.ValidationMessageFor(model => model.Title)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.Dob)
                    </th>
                    <td>
                        <div class="input-append">
                            @Html.TextBoxFor(model => model.Dob, new { @readonly = "readonly", @class = "dp1" })
                            @Html.ValidationMessageFor(model => model.Dob)
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.GivenName)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.GivenName)
                        @Html.ValidationMessageFor(model => model.GivenName)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.LastName)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.LastName)
                        @Html.ValidationMessageFor(model => model.LastName)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.Email)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.Email)
                        @Html.ValidationMessageFor(model => model.Email)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.ContactNumber)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.ContactNumber)
                        @Html.ValidationMessageFor(model => model.ContactNumber)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.SecondaryContactNumber)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.SecondaryContactNumber)
                        @Html.ValidationMessageFor(model => model.SecondaryContactNumber)
                    </td>
                </tr>
                <tr>
                    <th>@Html.LabelFor(model => model.Address_Id, "Address")
                    </th>
                    <td>
                        @Html.DropDownList("Address_Id", String.Empty)
                        @Html.ValidationMessageFor(model => model.Address_Id)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.Services)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.Services)
                        @Html.ValidationMessageFor(model => model.Services)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.PreferredCountry)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.PreferredCountry)
                        @Html.ValidationMessageFor(model => model.PreferredCountry)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.InPreferredCountry)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.InPreferredCountry)
                        @Html.ValidationMessageFor(model => model.InPreferredCountry)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.PreferredCountryVisaStatus)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.PreferredCountryVisaStatus)
                        @Html.ValidationMessageFor(model => model.PreferredCountryVisaStatus)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.MaritalStatus)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.MaritalStatus)
                        @Html.ValidationMessageFor(model => model.MaritalStatus)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.RelatedKinDetail)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.RelatedKinDetail)
                        @Html.ValidationMessageFor(model => model.RelatedKinDetail)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.Nationality)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.Nationality)
                        @Html.ValidationMessageFor(model => model.Nationality)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.LabelFor(model => model.Registered_On)
                    </th>
                    <td>
                        <div class="input-append">
                            @Html.TextBoxFor(model => model.Registered_On, new { @readonly = "readonly", @class = "dp1" })
                            @Html.ValidationMessageFor(model => model.Registered_On)
                        </div>
                    </td>
                </tr>
                <tr>
                    <th>
                    </th>
                    <td>
                        <input type="submit" value="Save Changes" class="btn btn-primary" />
                        @Html.Button_DeleteOrCancel("Cancel", "../Index")
                    </td>
                </tr>
            </table>*@
        </fieldset>
    </div>
}
