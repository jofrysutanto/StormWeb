@model StormWeb.Models.Event

@{
    ViewBag.Title = "Edit";
}

<script type="text/javascript">

    $(function () {


        $(".dp1").datepicker({
            dateFormat: 'dd/mm/yy',
            yearRange: '-100:c',
            changeMonth: true,
            changeYear: true,
            showOn: "button",
            buttonImage: "../../Content/img/calendar_btn.png",
            buttonImageOnly: true
        });

    });  </script>


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div class="row-fluid">
    <div class="span12">
        <div class="box-tab">
            <div class="page-header">
            <h1> &nbsp;&nbsp;Edit Advertisement </h1>
            </div>
            <div class="widget-content">
                <div class="widget-box" style="padding: 15px;">
@using (Html.BeginForm()) {
    @Html.ValidationSummary()
    @Html.ValidationSummary(true)
    <fieldset>
              @Html.HiddenFor(model => model.EventId)

         <div class="editor-label">
            @Html.Label("Heading")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Heading)
            @Html.ValidationMessageFor(model => model.Heading)
        </div>

         <div class="editor-label">
            @Html.Label("Venue")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Venue)
            @Html.ValidationMessageFor(model => model.Venue)
        </div>

         <div class="editor-label">
            @Html.Label("Description")
        </div>
       <div class="editor-field">
             @Html.TextAreaFor(model => model.Description, new { @class = "span11", rows = "8", cols = "8", id = "inbox-editor" })
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.Label("Author")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.EventAddedBy, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.EventAddedBy)
        </div>

        <div class="editor-label">
           @Html.Label("Uploaded Date")
        </div>
        <div class="editor-field">
            <div class="input-append">
            @Html.TextBoxFor(model => model.Date, new { @readonly = "readonly"})  
            @Html.ValidationMessageFor(model => model.Date)
        </div>
        </div>

        <div class="editor-label">
            @Html.Label("Audience")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.AudienceType, new { @readonly = "readonly" })
            @Html.ValidationMessageFor(model => model.AudienceType)
        </div>
         
        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
</div>
</div>
</div>
</div>
</div>
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>
