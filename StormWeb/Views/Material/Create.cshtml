@model StormWeb.Models.Material

@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">

    $(function () {


        $(".dp1").datepicker({
            dateFormat: 'dd/mm/yy',
            yearRange: '-100:c',
            changeMonth: true,
            changeYear: true,
            minDate: new Date()

        });

    }); </script>

    <script type="text/javascript">

        $(function () {
            $(".file").hide();

            $(":radio").click(function () {
                var selected = $(this).val();

                if (selected == "True") {
                    $(".file").show();


                }
                else {
                    $(".file").hide();
                }
            });

            var errorMsg = $(".FileError").html();

            if (errorMsg.indexOf("file") >= 0) {
                $.pnotify({
                    title: 'Error',
                    text: 'You have to upload a file',
                    type: 'error',
                    history: false
                });

                $(".FileError").hide();
            }


        }); </script>


<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm("Create", "Material", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true)
    @Html.ValidationMessage("NoFile", new { @class="FileError" })
     <div class="row-fluid">
    <div class="span12">
        <div class="box-tab">
            <div class="page-header">
                <h1>
                    &nbsp; &nbsp; Create new Advertising / Promotions</h1>
               
            </div>
            <div class="widget-content">
                <div class="widget-box" style="padding: 15px;">
   
        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
        @Html.LabelFor(model => model.Description)
          
        </div>
       @* <div class="control-group">
										<label class="control-label">Textarea</label>
										<div class="controls">
											<textarea class="input-xlarge" cols="2" rows="3"></textarea>
										</div>
									</div>*@
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Instore)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Instore)
            @Html.ValidationMessageFor(model => model.Instore)
        </div>

        <div class="editor-label">
            @Html.Label("RecordedOn")
        </div>
        <div class="editor-field">
         <div class="input-append">
            @Html.TextBox("RecordedOn", DateTime.Now, new { disabled = "disabled" })
            @Html.HiddenFor(x => x.RecordedOn, DateTime.Now, null)
          </div></div>

        <div class="editor-label">
            @Html.Label("RecordedBy")
        </div>
        <div class="editor-field">
            @Html.TextBox("RecordedBy", @CookieHelper.Username, new { disabled = "disabled" })
             @Html.HiddenFor(model => model.RecordedBy, CookieHelper.Name, null)
          
        </div>
        <div class="condition">
        <div class="editor-label">
            @Html.LabelFor(model => model.HasFile)
        </div>
       <div class="editor-field"> 
             
             @Html.RadioButtonFor(x => x.HasFile, false, new { @checked = "checked", name = "hasFile" })
             No &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
             @Html.RadioButtonFor(x => x.HasFile, true, new { name = "hasFile" })
             Yes
        </div></div>

        <br />
        <div class="file">
        <div class="editor-label">
           @Html.Label("Attachment")
           </div>
         <div class="editor-field">                         
            
              <input type="file" id="file" name="filename"  />
               
           
         </div> <br /> 
         </div>                 
         <input type="submit" class="btn btn-primary" value="Submit" name="Submit"/><space> @Html.Button_BackToList("Back to List", "Index") </space> 



                </div>
            </div>
        </div>
    </div>
</div>
                          }