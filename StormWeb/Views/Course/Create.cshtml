@model StormWeb.Models.Course            

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

<script type="text/javascript">
    $(function () {
        $("#University_Select").change(function () {
            var data = [];
            var selectedUniID = $(this).val();
            $.post('@Url.Action("GetFaculties")', { uniID: selectedUniID }, function (data) {
                data = $.map(data, function (item, a) {
                    return "<option value=" + item.Value + ">" + item.Text + "</option>";
            }, 'json');    
                $("#Faculty_Select").html(data.join(""));
            });
        });
    });   
</script>
<script type="text/javascript">
    $(document).ready(function () {
        // For DatePicker
        $(".dp").datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            minDate: '0',
            maxDate: '+24M'   
        });
    });
</script>

@using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Course</legend>

        <div class="editor-label">
            @Html.Label("Select University")
        </div>
        <div class="editor-field">
            @Html.DropDownList("University_Select", (IEnumerable<SelectListItem>)ViewBag.Universities, "-- Select One --")                          
        </div>
        <div class="editor-label">
            @Html.Label("Select Faculty")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Faculty_Select", Enumerable.Empty<SelectListItem>(), "-- Select One --")             
            @*@Html.ValidationMessageFor(model => model.Faculty_Id)*@
            @Html.ValidationMessage("FacultyError")
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Course_Level_Id, "Course Level")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Course_Level_Id", String.Empty)
            @Html.ValidationMessageFor(model => model.Course_Level_Id)
            @Html.ValidationMessage("CourseLevelError")
        </div>

        @*<div class="editor-label">
            @Html.LabelFor(model => model.Faculty_Id, "Faculty")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Faculty_Id", String.Empty)
            @Html.ValidationMessageFor(model => model.Faculty_Id)
        </div>*@
        <div class="editor-label" >
            @Html.LabelFor(model => model.Commence_Date_Sem,"Semester Commencement Date")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Commence_Date_Sem, new { @readonly = "readonly", @class = "dp" })     
         @*   @Html.ValidationMessageFor(model => model.Course_Level_Id)*@
            @Html.ValidationMessage("DateError")
        </div>                 
       @* <div class="editor-field">
        @Html.EditorFor(model => model.Commence_Date_Sem)
           
          
                @Html.ValidationMessageFor(model => model.Commence_Date_Sem)
                @Html.ValidationMessage("DateError")
          
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.Course_Name, "Course Name")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Course_Name)
            @Html.ValidationMessageFor(model => model.Course_Name)
            @Html.ValidationMessage("CourseNameError")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Duration, "Duration (in months)")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Duration)
            @Html.ValidationMessageFor(model => model.Duration)
        @*    @Html.ValidationMessage("DurationError")*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Fee, "Total Course Fees ($AUD)")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Fee)
            @Html.ValidationMessageFor(model => model.Fee)
        @*    @Html.ValidationMessage("FeeError")*@
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description)
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>
