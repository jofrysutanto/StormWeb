@model StormWeb.Models.Course

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">
    $(document).ready(function () {
        // For DatePicker
        $(".dp").datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            minDate: '0',
            maxDate: '+3M'      
        });
    });
</script>
@using (Html.BeginForm("Edit", "Course", FormMethod.Post))
{
    @Html.ValidationSummary(true,"Edit was unsuccessful. Please correct errors and try again")
    <fieldset>
        <legend>Course</legend>

        @Html.HiddenFor(model => model.Course_Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Course_Level_Id, "Course Level")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Course_Level_Id", String.Empty)
         @*   @Html.ValidationMessageFor(model => model.Course_Level_Id)*@
            @Html.ValidationMessage("CourseLevelError")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Faculty_Id, "Faculty")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Faculty_Id", String.Empty)
         @*   @Html.ValidationMessageFor(model => model.Faculty_Id)*@
            @Html.ValidationMessage("FacultyError")
        </div>

        <div class="editor-label" >
            @Html.LabelFor(model => model.Commence_Date_Sem, "Semester Commencement Date")
        </div>
        <div class="editor-field">
            @Html.TextBoxFor(model => model.Commence_Date_Sem, new { @readonly = "readonly", @class = "dp" })     
         @*   @Html.ValidationMessageFor(model => model.Course_Level_Id)*@
            @Html.ValidationMessageFor(model => model.Commence_Date_Sem)
             @Html.ValidationMessage("DateError")
        </div>  
        <div class="editor-label">
            @Html.LabelFor(model => model.Course_Name, "Course Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Course_Name)
           @* @Html.ValidationMessageFor(model => model.Course_Name)*@
            @Html.ValidationMessage("CourseNameError")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Duration, "Duration")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Duration)
            @Html.ValidationMessageFor(model => model.Duration)
            @Html.ValidationMessage("DurationError")
        </div>
          <div class="editor-label">
            @Html.LabelFor(model => model.Fee, "Fee")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Fee)
            @Html.ValidationMessageFor(model => model.Fee)
            @Html.ValidationMessage("FeeError")
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Description, "Description")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description)         
        </div>

        

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "ViewCourses", new { id = ViewBag.UniversityId })
</div>
