@model StormWeb.Models.AdvertisementViewModel

@{
    ViewBag.Title = "Create";
}

<script type="text/javascript">

    $(function () {


        $(".dp1").datepicker({
            dateFormat: 'dd/mm/yy',
            yearRange: '-100:c',
            changeMonth: true,
            changeYear: true,
            showOn: "button",
            buttonImage: "../../Content/img/calendar_btn.png",
            buttonImageOnly: true,
            minDate: new Date()
            
        });

    }); </script>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<BODY id=":d" class="editable LW-avf" style="min-width:0;" hidefocus="true" g_editable="true">
 @using (Html.BeginForm("Create", "Advertisement", FormMethod.Post, new { enctype = "multipart/form-data" }))
 {
    
    @Html.ValidationSummary(true)
    <div class="row-fluid">
    <div class="span12">
        <div class="box-tab">
            <div class="page-header">
                <h1>
                    &nbsp; &nbsp; Create new Advertising / Promotions</h1>
               
            </div>
            <div class="widget-content">
                <div class="widget-box" style="padding: 15px;">
                       
                       
    
         <div class="editor-label">
            @Html.LabelFor(model => model.adv.Heading)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.adv.Heading)
            @Html.ValidationMessageFor(model => model.adv.Heading)
        </div>

        <div class="editor-label">
            @Html.Label("Author")
        </div>
        <div class="editor-field">
             @Html.TextBox("Author", @CookieHelper.Name, new { disabled="disabled" } )
             @Html.HiddenFor(x => x.adv_file.UploadedBy, CookieHelper.Name, null)
        </div>
        <br />
        <div class="editor-label">
            @Html.Label("Audience")
        </div>
        <div class="editor-field"> 
             
             @Html.RadioButtonFor(x => x.adv.Audience, "student", new { @checked = "checked" })
             Student &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
             @Html.RadioButtonFor(x => x.adv.Audience,"staff")
             Staff
        </div>
        <br />
        <div class="editor-label">
            @Html.Label("Expiry Date")
        </div>
        <div class="editor-field">
            <div class="controls">
              <div class="input-append">
                 @Html.TextBoxFor(model => model.adv.ExpiryDate, new { @readonly = "readonly", @class = "dp1" })
              </div><p class="help-block">
                  @Html.ValidationMessageFor(model => model.adv.ExpiryDate)
                  </p></div>
        </div>
        <div class="editor-label">
            @Html.Label("Content")
        </div>
        <div class="editor-field">
           @Html.TextAreaFor(model => model.adv.Comments, new { @class = "span11", rows = "8", cols = "8", id = "inbox-editor" })
            @Html.ValidationMessageFor(model => model.adv.Comments)
        </div>
        <br />
        <div class="editor-label">
           @Html.Label("Attachment")
           </div>
         <div class="editor-field">                         
            
              <input type="file" id="file" name="filename"  />
               
           
         </div> <br />                  
         <input type="submit" class="btn btn-primary" value="Submit" name="Submit"/><space> @Html.Button_BackToList("Back to List", "Index") </space> 



                </div>
            </div>
        </div>
    </div>
</div>
                          }
                          </BODY>


