@model StormWeb.Models.Branch

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) 
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Branch</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Branch_Name,"Branch Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Branch_Name)
            @Html.ValidationMessageFor(model => model.Branch_Name)
        </div>
       @* <div class="editor-label">
            @Html.LabelFor(model => model.Address.Address_Id, "Address")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Address_Id", String.Empty)
            @Html.ValidationMessageFor(model => model.Address.Address_Id)
        </div>*@

        <div class="editor-label">
            @Html.LabelFor(model => model.Address.Address_Name, "Address")
        </div>
        <div class="editor-field">
          @Html.EditorFor(model => model.Address.Address_Name)
            @Html.ValidationMessageFor(model => model.Address.Address_Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address.City, "City")
        </div>
        <div class="editor-field">
              @Html.EditorFor(model => model.Address.City)
            @Html.ValidationMessageFor(model => model.Address.City)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address.State, "State")
        </div>
        <div class="editor-field">
              @Html.EditorFor(model => model.Address.State)
            @Html.ValidationMessageFor(model => model.Address.State)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.Address.Zipcode, "Zipcode")
        </div>
        <div class="editor-field">
              @Html.EditorFor(model => model.Address.Zipcode)
            @Html.ValidationMessageFor(model => model.Address.Zipcode)
        </div>
         <div class="editor-label">
            @Html.LabelFor(model => model.Address.Country_Id, "Country")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Country_Id", "-- Select One --")           
            @Html.ValidationMessageFor(model => model.Address.Country_Id)            
        </div>      
        <div class="editor-label">
            @Html.LabelFor(model => model.Primary_Contact,"Primary Contact No.")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Primary_Contact)
            @Html.ValidationMessageFor(model => model.Primary_Contact)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Secondary_Contact,"Secondary Contact No.")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Secondary_Contact)
            @Html.ValidationMessageFor(model => model.Secondary_Contact)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
