@model StormWeb.Models.Branch
@{
    ViewBag.Title = "Create";
} 
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    
      <div class="form-horizontal well">
    <fieldset style="margin-left: 50px;">
        <legend>
            <h2>
                Add New Branch</h2>
        </legend>
        <div class="control-group">
            @Html.Label("Branch Name", null, new { @class = "control-label form-required" })
            <div class="controls">
                @Html.EditorFor(model => model.Branch_Name, new { @class = "input-xlarge text-tip", placeholder = "Branch Name" })
                <p class="help-block">
                    @Html.ValidationMessageFor(model => model.Branch_Name)
                </p>
            </div>
        </div>
        <div class="control-group">
                @Html.Label("Address Name", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.Address.Address_Name, new { @class = "input-xlarge text-tip", placeholder = "Address Name" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.Address_Name)
                    </p>
                </div>
            </div>
              <div class="control-group">
                @Html.Label("City", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.Address.City, new { @class = "input-xlarge text-tip", placeholder = "City" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.City)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("State", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.Address.State, new { @class = "input-xlarge text-tip", placeholder = "State" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.State)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Zipcode", null, new { @class = "control-label form-required" })
                <div class="controls"> 
                @Html.EditorFor(model => model.Address.Zipcode, new { @class = "input-xlarge text-tip", placeholder = "Zipcode" })
                    
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.Zipcode)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Country", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.DropDownListFor(model => model.Address.Country_Id, (IEnumerable<SelectListItem>)ViewBag.Country_Id, "--Select--", new { @class = "chzn-select" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.Zipcode)
                    </p>
                </div>
            </div>
              <div class="control-group">
                @Html.Label("Primary Contact Number", null, new { @class = "control-label form-required", style = "width:200px;margin-left: -50px;" })
                <div class="controls">
                    @Html.EditorFor(model => model.Primary_Contact, new { @class = "input-xlarge text-tip", placeholder = "Primary Contact Number" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Primary_Contact)
                    </p>
                </div>
            </div>
             <div class="control-group">
                @Html.Label("Secondary Contact Number", null, new { @class = "control-label form-required", style = "width:200px;margin-left: -50px;" })
                <div class="controls">
                    @Html.EditorFor(model => model.Secondary_Contact, new { @class = "input-xlarge text-tip", placeholder = "Secondary Contact" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Secondary_Contact)
                    </p>
                </div>
            </div>
             <div class="control-group">
                @Html.Label("Email", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.Email, new { @class = "input-xlarge text-tip", placeholder = "Email" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Email)
                    </p>
                </div>
            </div>
            <div class="control-group">
                
                <div class="controls">
                      <input type="submit" class="btn btn-primary" value="Create" />
        @Html.Button_DeleteOrCancel("Cancel", "../../Branch")
                   
                </div>
            </div>
    </fieldset>
    </div> 
  @*  <table style="text-align: left;">
        <tr>
            <th>
                Branch Name
            </th>
            <td>
                @Html.EditorFor(model => model.Branch_Name)
                @Html.ValidationMessageFor(model => model.Branch_Name)
            </td>
        </tr>
        <tr>
            <th>
                Address Name
            </th>
            <td>
                @Html.EditorFor(model => model.Address.Address_Name)
                @Html.ValidationMessageFor(model => model.Address.Address_Name)
            </td>
        </tr>
        <tr>
            <th>
                City
            </th>
            <td>
                @Html.EditorFor(model => model.Address.City)
                @Html.ValidationMessageFor(model => model.Address.City)
            </td>
        </tr>
        <tr>
            <th>
                State
            </th>
            <td>
                @Html.EditorFor(model => model.Address.State)
                @Html.ValidationMessageFor(model => model.Address.State)
            </td>
        </tr>
        <tr>
            <th>
                Zipcode
            </th>
            <td>
                @Html.EditorFor(model => model.Address.Zipcode)
                @Html.ValidationMessageFor(model => model.Address.Zipcode)
            </td>
        </tr>
        <tr>
            <th>
                Country
            </th>
            <td>
                @Html.DropDownList("Country_Id", "-- Select One --")
                @Html.ValidationMessageFor(model => model.Address.Country_Id)
            </td>
        </tr>
        <tr>
            <th>
                Primary Contact No.
            </th>
            <td>
                @Html.EditorFor(model => model.Primary_Contact)
                @Html.ValidationMessageFor(model => model.Primary_Contact)
            </td>
        </tr>
        <tr>
            <th>
                Secondary Contact No.
            </th>
            <td>
                @Html.EditorFor(model => model.Secondary_Contact)
                @Html.ValidationMessageFor(model => model.Secondary_Contact)
            </td>
        </tr>
        <tr>
            <th>
                Email
            </th>
            <td>
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </td>
        </tr>
    </table>
    
 
    <div class="pull-left">
        <input type="submit" class="btn btn-primary" value="Create" />
        @Html.Button_DeleteOrCancel("Cancel", "Index")
    </div>*@
}
@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>
*@