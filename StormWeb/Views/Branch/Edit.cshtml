@model StormWeb.Models.BranchModel
@{
    ViewBag.Title = "Edit";
}
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
foreach (var item in Model.branchTable)
{
    @Html.HiddenFor(modelitem => item.Branch_Id)
    @Html.HiddenFor(model => model.addressTable.First().Address_Id)
    @Html.HiddenFor(model => model.countryTable.First().Country_Id)
}
    <div class="form-horizontal well">
        <fieldset style="margin-left: 50px;">
            <legend>
                <h2>
                    Edit Branch Details</h2>
            </legend>
            <div class="control-group">
                @Html.Label("Branch Name", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.branchTable.First().Branch_Name, new { @class = "input-xlarge text-tip", placeholder = "Branch Name" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.branchTable.First().Branch_Name)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Address Name", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.addressTable.First().Address_Name, new { @class = "input-xlarge text-tip", placeholder = "Address Name" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.addressTable.First().Address_Name)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("City", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.addressTable.First().City, new { @class = "input-xlarge text-tip", placeholder = "City" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.addressTable.First().City)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("State", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.addressTable.First().State, new { @class = "input-xlarge text-tip", placeholder = "State" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.addressTable.First().State)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Zipcode", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.addressTable.First().Zipcode, new { @class = "input-xlarge text-tip", placeholder = "Zipcode" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.addressTable.First().Zipcode)
                    </p>
                </div>
            </div>
              <div class="control-group">
                @Html.Label("Country", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.DropDownListFor(model => model.branchTable.First().Address.Country_Id, (IEnumerable<SelectListItem>)ViewBag.Country_Id, "--Select--", new { @class = "chzn-select" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.branchTable.First().Address.Country_Id)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Primary Contact Number", null, new { @class = "control-label form-required", style = "width:200px;margin-left: -50px;" })
                <div class="controls">
                    @Html.EditorFor(model => model.branchTable.First().Primary_Contact, new { @class = "input-xlarge text-tip", placeholder = "Primary Contact Number" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.branchTable.First().Primary_Contact)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Secondary Contact Number", null, new { @class = "control-label form-required", style = "width:200px;margin-left: -50px;" })
                <div class="controls">
                    @Html.EditorFor(model => model.branchTable.First().Secondary_Contact, new { @class = "input-xlarge text-tip", placeholder = "Secondary Contact" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.branchTable.First().Secondary_Contact)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Email", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.EditorFor(model => model.branchTable.First().Email, new { @class = "input-xlarge text-tip", placeholder = "Email" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.branchTable.First().Email)
                    </p>
                </div>
            </div>
            <div class="control-group">
                <div class="controls">
                    <input type="submit" class="btn btn-primary" value="Save Changes" />
                    <a href="@Url.Action("Index", "Branch")" class="btn btn-danger">Cancel</a>
                </div>
            </div>
        </fieldset>
    </div>
@*<table style="text-align: left;">
        <tr>
            <th>
                Branch Name
            </th>
            <td>
                @Html.EditorFor(model => model.branchTable.First().Branch_Name)
                @Html.ValidationMessageFor(model => model.branchTable.First().Branch_Name)
            </td>
        </tr>
        <tr>
            <th>
                Address Name
            </th>
            <td>
                @Html.EditorFor(model => model.addressTable.First().Address_Name)
                @Html.ValidationMessageFor(model => model.addressTable.First().Address_Name)
            </td>
        </tr>
        <tr>
            <th>
                City
            </th>
            <td>
                @Html.EditorFor(model => model.addressTable.First().City)
                @Html.ValidationMessageFor(model => model.addressTable.First().City)
            </td>
        </tr>
        <tr>
            <th>
                State
            </th>
            <td>
                @Html.EditorFor(model => model.addressTable.First().State)
                @Html.ValidationMessageFor(model => model.addressTable.First().State)
            </td>
        </tr>
        <tr>
            <th>
                Zipcode
            </th>
            <td>
                @Html.EditorFor(model => model.addressTable.First().Zipcode)
                @Html.ValidationMessageFor(model => model.addressTable.First().Zipcode)
            </td>
        </tr>
        <tr>
            <th>
                Primary Contact Number
            </th>
            <td>
                @Html.EditorFor(model => model.branchTable.First().Primary_Contact)
                @Html.ValidationMessageFor(model => model.branchTable.First().Primary_Contact)
            </td>
        </tr>
        <tr>
            <th>
                Secondary Contact Number
            </th>
            <td>
                @Html.EditorFor(model => model.branchTable.First().Secondary_Contact)
                @Html.ValidationMessageFor(model => model.branchTable.First().Secondary_Contact)
            </td>
        </tr>
        <tr>
            <th>
                Email
            </th>
            <td>
                @Html.EditorFor(model => model.branchTable.First().Email)
                @Html.ValidationMessageFor(model => model.branchTable.First().Email)
            </td>
        </tr>
    </table>
    
    <div class="pull-left">
        <input type="submit" class="btn btn-primary" value="Save Changes" />
        <a href="@Url.Action("Index", "Branch")" class="btn btn-danger">Cancel</a>
    </div>*@
}
