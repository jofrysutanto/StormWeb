@model StormWeb.Models.BranchModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@using (Html.BeginForm()) 
{
    @Html.ValidationSummary(true)
    <fieldset>
        <legend>Branch</legend>
        @foreach(var item in Model.branchTable)
        {
         @Html.HiddenFor(modelitem=>item.Branch_Id)
        @Html.HiddenFor(model => model.addressTable.First().Address_Id)
            }
        <div class="editor-label">
            @Html.LabelFor(model => model.branchTable.First().Branch_Name, "Branch Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.branchTable.First().Branch_Name)
            @Html.ValidationMessageFor(model => model.branchTable.First().Branch_Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.addressTable.First().Address_Name,"Address Name")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.addressTable.First().Address_Name)
            @Html.ValidationMessageFor(model => model.addressTable.First().Address_Name)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.addressTable.First().City,"City")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.addressTable.First().City)
            @Html.ValidationMessageFor(model => model.addressTable.First().City)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.addressTable.First().State,"State")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.addressTable.First().State)
            @Html.ValidationMessageFor(model => model.addressTable.First().State)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.addressTable.First().Zipcode, "Zipcode")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.addressTable.First().Zipcode)
            @Html.ValidationMessageFor(model => model.addressTable.First().Zipcode)
        </div>
        @*<div class="editor-label">
            @Html.LabelFor(model => model.Address_Id, "Address")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Address_Id", String.Empty)
            @Html.ValidationMessageFor(model => model.Address_Id)
        </div>
*@
        <div class="editor-label">
            @Html.LabelFor(model => model.branchTable.First().Primary_Contact, "Primary Contact Number")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.branchTable.First().Primary_Contact)
            @Html.ValidationMessageFor(model => model.branchTable.First().Primary_Contact)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.branchTable.First().Secondary_Contact, "Secondary Contact Number")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.branchTable.First().Secondary_Contact)
            @Html.ValidationMessageFor(model => model.branchTable.First().Secondary_Contact)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.branchTable.First().Email, "Email")
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.branchTable.First().Email)
            @Html.ValidationMessageFor(model => model.branchTable.First().Email)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
