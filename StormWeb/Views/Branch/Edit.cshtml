@model StormWeb.Models.BranchModel
@{
    ViewBag.Title = "Edit";
}
<h2>
    Edit</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
foreach (var item in Model.branchTable)
{
    @Html.HiddenFor(modelitem => item.Branch_Id)
    @Html.HiddenFor(model => model.addressTable.First().Address_Id)
    @Html.HiddenFor(model => model.countryTable.First().Country_Id)
}
    <table style="text-align: left;">
        <tr>
            <th>
                Branch Name
            </th>
            <td>
                @Html.EditorFor(model => model.branchTable.First().Branch_Name)
                @Html.ValidationMessageFor(model => model.branchTable.First().Branch_Name)
            </td>
        </tr>
        <tr>
            <th>
                Address Name
            </th>
            <td>
                @Html.EditorFor(model => model.addressTable.First().Address_Name)
                @Html.ValidationMessageFor(model => model.addressTable.First().Address_Name)
            </td>
        </tr>
        <tr>
            <th>
                City
            </th>
            <td>
                @Html.EditorFor(model => model.addressTable.First().City)
                @Html.ValidationMessageFor(model => model.addressTable.First().City)
            </td>
        </tr>
        <tr>
            <th>
                State
            </th>
            <td>
                @Html.EditorFor(model => model.addressTable.First().State)
                @Html.ValidationMessageFor(model => model.addressTable.First().State)
            </td>
        </tr>
        <tr>
            <th>
                Zipcode
            </th>
            <td>
                @Html.EditorFor(model => model.addressTable.First().Zipcode)
                @Html.ValidationMessageFor(model => model.addressTable.First().Zipcode)
            </td>
        </tr>
        <tr>
            <th>
                Primary Contact Number
            </th>
            <td>
                @Html.EditorFor(model => model.branchTable.First().Primary_Contact)
                @Html.ValidationMessageFor(model => model.branchTable.First().Primary_Contact)
            </td>
        </tr>
        <tr>
            <th>
                Secondary Contact Number
            </th>
            <td>
                @Html.EditorFor(model => model.branchTable.First().Secondary_Contact)
                @Html.ValidationMessageFor(model => model.branchTable.First().Secondary_Contact)
            </td>
        </tr>
        <tr>
            <th>
                Email
            </th>
            <td>
                @Html.EditorFor(model => model.branchTable.First().Email)
                @Html.ValidationMessageFor(model => model.branchTable.First().Email)
            </td>
        </tr>
    </table>
    @*<div class="editor-label">
        @Html.LabelFor(model => model.branchTable.First().Branch_Name, "Branch Name")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.branchTable.First().Branch_Name)
        @Html.ValidationMessageFor(model => model.branchTable.First().Branch_Name)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.addressTable.First().Address_Name, "Address Name")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.addressTable.First().Address_Name)
        @Html.ValidationMessageFor(model => model.addressTable.First().Address_Name)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.addressTable.First().City, "City")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.addressTable.First().City)
        @Html.ValidationMessageFor(model => model.addressTable.First().City)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.addressTable.First().State, "State")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.addressTable.First().State)
        @Html.ValidationMessageFor(model => model.addressTable.First().State)
    </div>
    <div class="editor-label">
        @Html.LabelFor(model => model.addressTable.First().Zipcode, "Zipcode")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.addressTable.First().Zipcode)
        @Html.ValidationMessageFor(model => model.addressTable.First().Zipcode)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.branchTable.First().Primary_Contact, "Primary Contact Number")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.branchTable.First().Primary_Contact)
        @Html.ValidationMessageFor(model => model.branchTable.First().Primary_Contact)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.branchTable.First().Secondary_Contact, "Secondary Contact Number")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.branchTable.First().Secondary_Contact)
        @Html.ValidationMessageFor(model => model.branchTable.First().Secondary_Contact)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.branchTable.First().Email, "Email")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.branchTable.First().Email)
        @Html.ValidationMessageFor(model => model.branchTable.First().Email)
    </div>*@
@*<div class="editor-label">
            @Html.LabelFor(model => model.Address_Id, "Address")
        </div>
        <div class="editor-field">
            @Html.DropDownList("Address_Id", String.Empty)
            @Html.ValidationMessageFor(model => model.Address_Id)
        </div>
*@
    @*<p>
        <input type="submit" value="Save" />
    </p>*@
 <div class="pull-left">
        <input type="submit" class="btn btn-primary" value="Save Changes"/>
        <a href="@Url.Action("Index","Branch")" class="btn btn-danger">Cancel</a>
    </div>
}
@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>
*@