@model  StormWeb.Models.Staff 
@{
    ViewBag.Title = "Edit";
   
}
 
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<ul class="error" id="ulError" style="display: none; list-style-type: disc; margin-left: 0px!important">
</ul>
@using (Html.BeginForm("Edit", "Staff", FormMethod.Post))
{
    @Html.ValidationSummary(false, null, new { @class = "error" })
 @*   <div id="divEditProfile">*@
        @Html.HiddenFor(model => model.Staff_Id)
        @Html.HiddenFor(model => model.Address.Address_Id)
        @Html.HiddenFor(model => model.Address.Country.Country_Id)
       <div class="form-horizontal well">
        <fieldset style="margin-left: 50px;">
            <legend>
                <h2>
                    Edit Staff Details</h2>
            </legend>

            <div class="control-group">
                @Html.Label("Given Name", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.FirstName, new { @class = "input-large text-tip", placeholder = "FirstName" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.FirstName)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Surname", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.LastName, new { @class = "input-large text-tip", placeholder = "Zipcode" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.LastName)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Department", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.DropDownListFor(model => model.Staff_Dept.Dept_Id, (IEnumerable<SelectListItem>)ViewBag.Dept_Id, "--Select--", new { @class = "chzn-select" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Dept_Id)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label(" Street Name and Number", null, new { @class = "control-label form-required", style = "width:200px;margin-left: -50px;" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Address.Address_Name, new { @class = "input-large text-tip", placeholder = " Street Name and Number" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.Address_Name)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("City", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Address.City, new { @class = "input-large text-tip", placeholder = "City" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.City)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("State", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Address.State, new { @class = "input-large text-tip", placeholder = "State" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.State)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Zipcode", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Address.Zipcode, new { @class = "input-large text-tip", placeholder = "Zipcode" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.Zipcode)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Country", null, new { @class = "control-label form-required" })
                <div class="controls">
                   @Html.DropDownListFor(model => model.Address.Country_Id, (IEnumerable<SelectListItem>)ViewBag.Country_Id, "--Select--", new { @class = "chzn-select" })
                   @* @Html.TextBoxFor(model => model.Address.Country.Country_Name)*@
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Address.Country_Id)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Title", null, new { @class = "control-label form-required" })
                <div class="controls"> 
                    @Html.EditorFor(model => model.Title) 
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Title)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("DOB", null, new { @class = "control-label form-required" })
                <div class="controls">
                    <div class="input-append">
                        @Html.TextBoxFor(model => model.DOB, new { @class = "chooseDate", @readonly = "readonly", @Value = Model.DOB.ToString("dd/MM/yyyy") })
                    </div>
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.DOB)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Date Of Joining", null, new { @class = "control-label form-required" })
                <div class="controls">
                    <div class="input-append">
                        @Html.TextBoxFor(model => model.Date_Of_Joining, new { @class = "chooseDate1", @readonly = "readonly", @Value = Model.Date_Of_Joining.ToString("dd/MM/yyyy") })
                    </div>
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Date_Of_Joining)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Mobile Number", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Mobile_Number, new { @class = "input-large text-tip", placeholder = "Mobile Number" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Mobile_Number)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Email", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Email, new { @class = "input-large text-tip", placeholder = "Email" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Email)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Tax Type", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Tax_Type, new { @class = "input-large text-tip", placeholder = "Tax Type" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Tax_Type)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("Tax Number", null, new { @class = "control-label form-required" })
                <div class="controls">
                    @Html.TextBoxFor(model => model.Tax_Number, new { @class = "input-large text-tip", placeholder = "Tax Number" })
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.Tax_Number)
                    </p>
                </div>
            </div>
            <div class="control-group">
                @Html.Label("UserName", null, new { @class = "control-label" })
                <div class="controls">
                    @Html.DisplayFor(model => model.UserName)
                    <p class="help-block">
                        @Html.ValidationMessageFor(model => model.UserName)
                    </p>
                </div>
            </div>
            <div class="control-group">
                <div class="controls span7">
                    @Html.Partial("~/Views/Shared/Partial/_BranchListPartial.cshtml", (List<StormWeb.Models.Branch>)ViewBag.Branch)
                </div>
            </div>
            <div class="control-group">
                <div class="controls">
                   <input type="submit" class="btn btn-primary" value="Save Changes" />
             @Html.Button_DeleteOrCancel("Cancel", "../../Staff")
                </div>
            </div>
        </fieldset>
     </div>  
    <br />
}
 
<script type="text/javascript">
    $(function () {
        $(".cancelButton").click(function () {
            parent.$.fn.colorbox.close();  
        });
    });
     
    
    $(function(){  
    $("#Title").trigger("liszt:updated");
    @{ 
        if (ViewBag.successEdit != null)
        { 
        @:parent.location='/Staff/Index/?message=edit';
        @:parent.$.fn.colorbox.close();
        };
    }
     });
 
    $(document).ready(function () { 
        $(".chooseDate").datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            minDate: '-100Y',
            maxDate: '0',
            showOn: "button",
            buttonImage: "../../Content/img/calendar_btn.png",
            buttonImageOnly: true
        });
    });
     $(document).ready(function () { 
        $(".chooseDate1").datepicker({
            dateFormat: 'mm/dd/yy',
            changeMonth: true,
            changeYear: true,
            minDate: '0',
            maxDate: '+10Y',
            showOn: "button",
            buttonImage: "../../Content/img/calendar_btn.png",
            buttonImageOnly: true
        });
    });


</script>
  