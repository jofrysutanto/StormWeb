@model IEnumerable<StormWeb.Models.University>


@{
    ViewBag.Title = "Index";
}
<script type="text/javascript">
    $(function () {
        $('a[id*="popover"]').popover();
    });
</script>

<div class="row-fluid">
    <div class="page-header">
        <h1>
            All Universities</h1>
    </div>
</div>
<div class="row-fluid">
     <div class="span12">        
        <div class="widget-block">
          <div class="widget-head">
                <h5><i class="black-icons  documents"></i>University List</h5>
                </div>

            <div class="widget-content">
                <div class="widget-box">
                    <table class="my-data-tbl-boxy table">
                        <thead>
                        <tr>
                            <th> <i class="black-icons user"></i>Country </th>
                            <th> University Name </th>
                            <th> Faculties </th>
                            <th> Number of Courses </th> 
                            <th> Email </th>
                            <th> Action </th>
                        </tr>
                        </thead>
                    <tbody>
                     
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td> @Html.DisplayFor(modelItem => item.Country.Country_Name) </td>
                            <td>
                                <a href = "@item.University_Url">@item.University_Name</a><br />
                                <b>Campus:</b> @Html.DisplayFor(modelItem => item.Campus) 
                            </td>
                            <td>   
                                <ul>                                
                                @{
                                    string a = "";
                                    int countFac = 0;
                                    foreach (StormWeb.Models.Faculty fac in item.Faculties)
                                    {
                                        a = a + fac.Faculty_Name + "<br />";
                                        countFac += 1;
                                    }
                                    if (countFac > 0)
                                    {
                                        <li><a id="popover@(item.University_Id)" data-content="@a" href="@(Url.Action("Faculties", new { id = item.University_Id }))" data-original-title="Faculties">@item.Faculties.Count</a></li>
                                    }
                                    else
                                    {
                                        <li><a id="popover@(item.University_Id)" data-content="No faculties" href="@(Url.Action("Faculties", new { id = item.University_Id }))" data-original-title="Faculties">@item.Faculties.Count</a></li>
                                    }
                                }                                    
                                </ul>                                                               
                            </td>
                            <td>
                                <ul>
                                @{
                                    int courseCountForAllFaculties = 0;
                                    foreach (StormWeb.Models.Faculty fac in item.Faculties)
                                    {
                                        courseCountForAllFaculties += fac.Courses.Count;
                                    }
                                    <li>@courseCountForAllFaculties</li>
                                } 
                                </ul>
                            </td>
                          
                            <td>
                                @Html.DisplayFor(modelItem => item.Email)
                            </td>
                            <td>
                                @Html.ActionLink("View Courses", "ViewCourses", "Course", new { id = item.University_Id }, null) |
                                @Html.ActionLink("Edit", "Edit", new { id = item.University_Id }) |            
                                @Html.ActionLink("Delete", "Delete", new { id = item.University_Id })
                            </td>
                        </tr>
                    }
                    </tbody>
                  </table>
                </div>
              </div>
             </div>
            </div>
         </div>
<p>
    @Html.ActionLink("Create New", "Create")
</p>

</div>
</div>